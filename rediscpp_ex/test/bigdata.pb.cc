// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigdata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bigdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class obj_big_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<obj_big_data> {
} _obj_big_data_default_instance_;

namespace protobuf_bigdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(obj_big_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(obj_big_data, records_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(obj_big_data)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_obj_big_data_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bigdata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _obj_big_data_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _obj_big_data_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rbigdata.proto\"\037\n\014obj_big_data\022\017\n\007recor"
      "ds\030\001 \003(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 56);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bigdata.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_bigdata_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int obj_big_data::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

obj_big_data::obj_big_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bigdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:obj_big_data)
}
obj_big_data::obj_big_data(const obj_big_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      records_(from.records_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:obj_big_data)
}

void obj_big_data::SharedCtor() {
  _cached_size_ = 0;
}

obj_big_data::~obj_big_data() {
  // @@protoc_insertion_point(destructor:obj_big_data)
  SharedDtor();
}

void obj_big_data::SharedDtor() {
}

void obj_big_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* obj_big_data::descriptor() {
  protobuf_bigdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bigdata_2eproto::file_level_metadata[0].descriptor;
}

const obj_big_data& obj_big_data::default_instance() {
  protobuf_bigdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

obj_big_data* obj_big_data::New(::google::protobuf::Arena* arena) const {
  obj_big_data* n = new obj_big_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void obj_big_data::Clear() {
// @@protoc_insertion_point(message_clear_start:obj_big_data)
  records_.Clear();
}

bool obj_big_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:obj_big_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 records = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_records())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_records())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:obj_big_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:obj_big_data)
  return false;
#undef DO_
}

void obj_big_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:obj_big_data)
  // repeated int64 records = 1;
  if (this->records_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_records_cached_byte_size_);
  }
  for (int i = 0; i < this->records_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->records(i), output);
  }

  // @@protoc_insertion_point(serialize_end:obj_big_data)
}

::google::protobuf::uint8* obj_big_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:obj_big_data)
  // repeated int64 records = 1;
  if (this->records_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _records_cached_byte_size_, target);
  }
  for (int i = 0; i < this->records_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->records(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:obj_big_data)
  return target;
}

size_t obj_big_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:obj_big_data)
  size_t total_size = 0;

  // repeated int64 records = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->records_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _records_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void obj_big_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:obj_big_data)
  GOOGLE_DCHECK_NE(&from, this);
  const obj_big_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const obj_big_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:obj_big_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:obj_big_data)
    MergeFrom(*source);
  }
}

void obj_big_data::MergeFrom(const obj_big_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:obj_big_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  records_.MergeFrom(from.records_);
}

void obj_big_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:obj_big_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void obj_big_data::CopyFrom(const obj_big_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:obj_big_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool obj_big_data::IsInitialized() const {
  return true;
}

void obj_big_data::Swap(obj_big_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void obj_big_data::InternalSwap(obj_big_data* other) {
  records_.UnsafeArenaSwap(&other->records_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata obj_big_data::GetMetadata() const {
  protobuf_bigdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bigdata_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// obj_big_data

// repeated int64 records = 1;
int obj_big_data::records_size() const {
  return records_.size();
}
void obj_big_data::clear_records() {
  records_.Clear();
}
::google::protobuf::int64 obj_big_data::records(int index) const {
  // @@protoc_insertion_point(field_get:obj_big_data.records)
  return records_.Get(index);
}
void obj_big_data::set_records(int index, ::google::protobuf::int64 value) {
  records_.Set(index, value);
  // @@protoc_insertion_point(field_set:obj_big_data.records)
}
void obj_big_data::add_records(::google::protobuf::int64 value) {
  records_.Add(value);
  // @@protoc_insertion_point(field_add:obj_big_data.records)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
obj_big_data::records() const {
  // @@protoc_insertion_point(field_list:obj_big_data.records)
  return records_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
obj_big_data::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:obj_big_data.records)
  return &records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
